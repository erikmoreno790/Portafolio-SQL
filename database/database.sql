-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.cursos
(
    curso_id serial NOT NULL,
    titulo character varying(100) COLLATE pg_catalog."default" NOT NULL,
    descripcion text COLLATE pg_catalog."default",
    creditos integer,
    departamento_id integer,
    profesor_id integer,
    CONSTRAINT cursos_pkey PRIMARY KEY (curso_id)
);

CREATE TABLE IF NOT EXISTS public.departamentos
(
    departamento_id serial NOT NULL,
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    presupuesto numeric(12, 2),
    edificio character varying(50) COLLATE pg_catalog."default",
    director_id integer,
    CONSTRAINT departamentos_pkey PRIMARY KEY (departamento_id)
);

CREATE TABLE IF NOT EXISTS public.estudiantes
(
    estudiante_id serial NOT NULL,
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    apellido character varying(100) COLLATE pg_catalog."default" NOT NULL,
    fecha_nacimiento date,
    email character varying(100) COLLATE pg_catalog."default",
    telefono character varying(20) COLLATE pg_catalog."default",
    direccion text COLLATE pg_catalog."default",
    activo boolean DEFAULT true,
    fecha_registro date DEFAULT CURRENT_DATE,
    CONSTRAINT estudiantes_pkey PRIMARY KEY (estudiante_id),
    CONSTRAINT estudiantes_email_key UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.horarios
(
    horario_id serial NOT NULL,
    curso_id integer,
    dia_semana character varying(10) COLLATE pg_catalog."default",
    hora_inicio time without time zone NOT NULL,
    hora_fin time without time zone NOT NULL,
    aula character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT horarios_pkey PRIMARY KEY (horario_id)
);

CREATE TABLE IF NOT EXISTS public.matriculaciones
(
    matricula_id serial NOT NULL,
    estudiante_id integer,
    curso_id integer,
    fecha_matricula date DEFAULT CURRENT_DATE,
    calificacion numeric(3, 1),
    semestre character varying(20) COLLATE pg_catalog."default",
    aprobado boolean DEFAULT false,
    CONSTRAINT matriculaciones_pkey PRIMARY KEY (matricula_id)
);

CREATE TABLE IF NOT EXISTS public.profesores
(
    profesor_id serial NOT NULL,
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    apellido character varying(100) COLLATE pg_catalog."default" NOT NULL,
    especialidad character varying(100) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default",
    fecha_contratacion date,
    salario numeric(10, 2),
    jefe_departamento boolean DEFAULT false,
    CONSTRAINT profesores_pkey PRIMARY KEY (profesor_id),
    CONSTRAINT profesores_email_key UNIQUE (email)
);

ALTER TABLE IF EXISTS public.cursos
    ADD CONSTRAINT cursos_departamento_id_fkey FOREIGN KEY (departamento_id)
    REFERENCES public.departamentos (departamento_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.cursos
    ADD CONSTRAINT cursos_profesor_id_fkey FOREIGN KEY (profesor_id)
    REFERENCES public.profesores (profesor_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.departamentos
    ADD CONSTRAINT departamentos_director_id_fkey FOREIGN KEY (director_id)
    REFERENCES public.profesores (profesor_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.horarios
    ADD CONSTRAINT horarios_curso_id_fkey FOREIGN KEY (curso_id)
    REFERENCES public.cursos (curso_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.matriculaciones
    ADD CONSTRAINT matriculaciones_curso_id_fkey FOREIGN KEY (curso_id)
    REFERENCES public.cursos (curso_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.matriculaciones
    ADD CONSTRAINT matriculaciones_estudiante_id_fkey FOREIGN KEY (estudiante_id)
    REFERENCES public.estudiantes (estudiante_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;
